{
  "hash": "934ad52deb035c18bd66edca6a20e0e6",
  "result": {
    "markdown": "---\ntitle: \"Ordination plot- Beta diveristy\"\nauthor: \n  - name: Johan S. Sáenz \n    affiliations: University of Hohenheim\ndate: \"15-06-2023\"\ncategories: [R, functions]\nformat:\n   pdf:\n    toc: true\n    keep-tex: true\n    number-sections: true\n    colorlinks: true\n    fig-pos: 'h'\n    code-block-bg: true\n   html:\n    toc: true\n    toc-location: left\n---\n\n\n\n# Ordination analysis\n\nThis tutorial would describe how to perform a **Non-metric MultiDimensional Scaling (NMDS)** ordination analysis, based on the total protein groups identified in a metaproteomics experiment. NMDS is a distance-based ordination technique, which summarizes the differences or similarities between each pair of sample using any number of response variables. This technique is broadly use in Microbial ecology and metagenomic, metatrascriptomics, metaproteomics and metabolomic analysis. For more details on ordiantion analysis please read [Multivariate analyses in microbial ecology](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2121141/) and [PCoA & NMDS](https://www.davidzeleny.net/anadat-r/doku.php/en:pcoa_nmds).\n\nFor the following analysis we require two data frames 1) metadata describing each sample `metadata_metapro.txt` and 2) the intensity of the different protein groups across the samples `final_proteins.tsv`. The protein groups data frame was obtained running a set of metaproteomic raw files in the [iMetaLab](https://imetalab.ca) software.\n\n## Set up working space and load data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# libraries ----------------------\nlibrary(tidyverse)\nlibrary(vegan)\n\n# data------------------\ndf_proteins <- read_tsv(\"../../project/rawdata/final_proteins.tsv\")\n\nmetadata <- read.table(file = \"../../project/rawdata/metadata_metapro.txt\",\n                       header = TRUE,\n                       sep = \"\\t\",\n                       check.names = FALSE)\n```\n:::\n\n\n\n## Cleaning metadata\n\nFirst we need to clean our metadata. This specific dataframe has some issues that can create noise during the analysis:\n\n1.  Bad variable naming\n2.  The variable `rawfiles` contain dots (.)\n3.  The variable `Abschnitt` contains spaces and correspond to more than one variable.\n\nWe can solve this problems: 1) first renaming the variables using the function `rename()`, 2) then we can replace the dots (.) for underscores using the functions `mutate()` and `str_replace()`, and finally 3) we can separate the variable `section` into two new variables using the function `separate()`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmetadata <- read.table(file = \"../../project/rawdata/metadata_metapro.txt\",\n                       header = TRUE,\n                       sep = \"\\t\",\n                       check.names = FALSE) %>% \n  rename(rawfile=Probenname, section=Abschnitt) %>% \n  mutate(rawfile = str_replace(rawfile, \"\\\\.\", \"_\")) %>% \n  separate(section,\n           into = c(\"section\", \"origin\"),\n           sep = \"\\\\s\") \n\nmetadata[1:5,]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  rawfile  section  origin\n1     9_1  Stomach Digesta\n2     9_3  Stomach  Mucosa\n3     9_4  Stomach  Mucosa\n4     9_5  Stomach  Mucosa\n5     9_6 Duodenum Digesta\n```\n:::\n:::\n\n\n\n## Calculate protein relative abundance\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrel_abundance_df <- df_proteins %>%\n  rename(proteinid = `Protein IDs`) %>% \n  select(proteinid, contains(\"Intensity\"), -Intensity) %>% \n  pivot_longer(-proteinid, names_to = \"rawfile\", values_to = \"intensity\") %>%\n  mutate(intensity = as.numeric(intensity),\n         rawfile = str_remove(rawfile, \"Intensity \")) %>% \n  group_by(rawfile) %>% \n  mutate(rel_abundance = 100*(intensity/sum(intensity))) %>%\n  select(proteinid, rawfile, rel_abundance) %>% \n  pivot_wider(names_from = rawfile, values_from = rel_abundance)\n```\n:::\n\n\n\n## Transform the Protein groups data frame\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a matrix and transpose data--------------\nmatrix <- rel_abundance_df[2:21] %>% \n  t()\n```\n:::\n\n\n\n## **Non-metric MultiDimensional Scaling (NMDS)**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Calculate distance -----------------\nnmds1 <- metaMDS(matrix,  #perform nmds\n                 distance = \"bray\", \n                 try = 20, \n                 trymax = 100, \n                 maxit = 1000, \n                 k = 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRun 0 stress 0.0393017 \nRun 1 stress 0.03930164 \n... New best solution\n... Procrustes: rmse 0.000159104  max resid 0.0003476246 \n... Similar to previous best\nRun 2 stress 0.04066654 \nRun 3 stress 0.03930173 \n... Procrustes: rmse 0.0001697639  max resid 0.0003891454 \n... Similar to previous best\nRun 4 stress 0.05920848 \nRun 5 stress 0.05922803 \nRun 6 stress 0.1882621 \nRun 7 stress 0.04063187 \nRun 8 stress 0.04066681 \nRun 9 stress 0.0425669 \nRun 10 stress 0.04066647 \nRun 11 stress 0.04063228 \nRun 12 stress 0.03930165 \n... Procrustes: rmse 0.0001042094  max resid 0.00020394 \n... Similar to previous best\nRun 13 stress 0.04063213 \nRun 14 stress 0.04063194 \nRun 15 stress 0.04063198 \nRun 16 stress 0.03930161 \n... New best solution\n... Procrustes: rmse 3.433133e-05  max resid 7.765347e-05 \n... Similar to previous best\nRun 17 stress 0.04063211 \nRun 18 stress 0.04063201 \nRun 19 stress 0.04066651 \nRun 20 stress 0.03980541 \n*** Best solution repeated 1 times\n```\n:::\n:::\n\n\n\n## Check the ordination analysis\n\nUsing some vegan functions we can check the raw plot of our ordination and how good the analysis fot to our data. It is recommended that the stress of the analysis is lower than 0.2\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# qc checking\nordiplot(nmds1, display = \"sites\")\n```\n\n::: {.cell-output-display}\n![](ordination_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\nnmds1$stress  \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.03930161\n```\n:::\n\n```{.r .cell-code}\nstressplot(nmds1)\n```\n\n::: {.cell-output-display}\n![](ordination_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n:::\n\n\n\nLarge scatter around the line suggests that original dissimilarities are not well preserved in the reduced number of dimensions. Looks pretty good in this case\n\n## Extract the NDMS scores\n\nWe need to extract the scores from the NMDS and combined them with the metadata. In this way we can label each of our samples based on their metadata.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Extracting scores\ndata_scores <- as.data.frame(scores(nmds1, display=c(\"sites\")))\n\n#Addd metadata to dataframe\ndata_scores$rawfile <- as.character(row.names(data_scores)) \n\n#joing metadata with nmds scorres\ndata_nmds <- left_join(data_scores, metadata, by = \"rawfile\")\n\ndata_nmds$section <- factor(data_nmds$section,\n                             levels = c(\"Caecum\", \"Jejunum\"))#Extracting scores\n```\n:::\n\n\n\n## Create a plot with ggplot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_nmds %>%\n  ggplot() +\n  geom_point(aes(x = NMDS1,\n                 y = NMDS2,\n                 colour =section),\n             size = 4\n             #alpha = 0.7\n  ) +\n  scale_color_manual(values = c('#66C2A5','#FC8D62')) +\n  theme_classic() +\n  theme(panel.background = element_blank(), #remove background\n        panel.grid.major = element_blank(), #remove grid\n        panel.grid.minor = element_blank(),#remove grid\n        legend.title = element_blank(),\n        legend.text = element_text(size=12),\n        legend.position = \"top\") #remove legend title\n```\n\n::: {.cell-output-display}\n![](ordination_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "ordination_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}