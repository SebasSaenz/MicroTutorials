{
  "hash": "58db196d689c9cf813b6a9f90a774ad7",
  "result": {
    "markdown": "---\ntitle: \"Working space set-up\"\nauthor: \"Johan Sáenz\"\ndate: \"05-04-2023\"\ncategories: [R, functions]\nformat:\n   pdf:\n    toc: true\n    keep-tex: true\n    number-sections: true\n    colorlinks: true\n    fig-pos: 'h'\n    code-block-bg: true\n   html:\n    toc: true\n    toc-location: left\n---\n\n\n# **Working space set-up**\n\nThe most important thing to do before starting a new project is to set up the working space. In this blog I will describe the steps that I follow and work for me but it is not the only way. So if you find new ways to set-up your working space feel free to do it.\n\n# Folder structure\n\n1.  First of all, I create a main folder with the name of my project and inside I create three sub folders call: **rawdata**, **code** and **figures**. The names of the folders indicates the type of file that would be stored in each of them. Sometime I also create a folder call **processed_data**, when I want to save intermediate files. The file in the raw data must not be modified.\n\n![](folders.png){fig-align=\"center\" fig-pos=\"H\" width=\"600\"}\n\n2.  Next, I move the raw data to the respective folder.\n3.  After, I create a new R script and then Save as... inside the **code** folder. I always give meaningful names to my files. Those names are based on the main goal of the script. For example if it is to create a bar plot, I name the file barplot.R\n\n![](newfile.png){fig-align=\"center\" width=\"600\" fig-pos=\"H\" width=\"650\"}\n\n# Working directory\n\n4.  Open the new R script and use the symbol \\# to add some comments to the file. The \\# indicates that the line would not be run by R. The \\# is quite useful as you can add different comments to help you and other people to understand your code.\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    # Author: Johan S. Sáenz\n    # Email: johan.saenzmedina@uni-hohenheim.de\n    # info: script to create a barplot\n    ```\n    :::\n\n\n5.  Select the working directory in the Session menu. You should select your project folder. You will notice that in the console the following code was printed: **`setwd(\"/Users/sebastiansaenz/Documents/github/MicroTutorials/project\")`**. Copy the code and paste it in your script. Add a comment indicating that the following line is used to set up your working directory.\n\n![](wd.png){fig-align=\"center\" width=\"600\" fig-pos=\"H\" width=\"650\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Author: Johan S. Sáenz\n# Email: johan.saenzmedina@uni-hohenheim.de\n# info: script to create a barplot\n\n# Setting working directory\nsetwd(\"/Users/sebastiansaenz/Documents/github/MicroTutorials/project\")\n```\n:::\n\n\n# Installing and loading libraries\n\n6.  R has several pre-build functions but other packages created by the community can be use as long as they are install and load. Now we can use the function **`install.packages()`** to install the packages that we would need for our analysis. This function should be use only once, because after the installation, the package will be available to be load even after closing the software. On the other hand, the function **`library()`** must be use every time a new R session is initiate. After installation you can comment out the **`#install.packages(\"tidyverse\")`**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Author: Johan S. Sáenz\n# Email: johan.saenzmedina@uni-hohenheim.de\n# info: script to create a barplot\n\n# Setting working directory\nsetwd(\"/Users/sebastiansaenz/Documents/github/MicroTutorials/project\")\n\n# install libraries\n#install.packages(\"tidyverse\")\n\n# load libraries\nlibrary(tidyverse)\n```\n:::\n\n\n# Load files\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Author: Johan S. Sáenz\n# Email: johan.saenzmedina@uni-hohenheim.de\n# info: script to create a barplot\n\n# Setting working directory\nsetwd(\"/Users/sebastiansaenz/Documents/github/MicroTutorials/project\")\n\n# install libraries\n#install.packages(\"tidyverse\")\n\n# load libraries\nlibrary(tidyverse)\n\n#load files\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}